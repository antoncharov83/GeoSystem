@model IEnumerable<GeoSystem.Models.Request>

    <script>
        var brigadeRenderer = function (value) {
            if (!Ext.isEmpty(value)) {
                return value.BrigadeName;
            }

            return value;
        };

        var onStoreException = function (proxy, response, operation) {
            var error = operation.getError(),
                        message = Ext.isString(error) ? error : ('(' + error.status + ')' + error.statusText);

            Ext.net.Notification.show({
                iconCls: 'icon-exclamation',
                html: message + "\n<br /><b>Proxy type:</b> " + proxy.type,
                title: 'EXCEPTION',
                scrollable: 'both',
                hideDelay: 5000,
                width: 300,
                height: 200
            });
        };
    </script>

@(Html.X().Store()
            .ID("BrigadeStore")
            .Model(Html.X().Model()
                .Fields(
                    new ModelField("brigade", ModelFieldType.Object) { Mapping = "Brigade" },
                    new ModelField("BrigadeName", ModelFieldType.String) { Mapping = "BrigadeName" }
                )
            )
            .Proxy(Html.X().AjaxProxy()
                .Url(Url.Action("GetBrigades"))
                .Reader(Html.X().JsonReader().RootProperty("data"))
            )
)

@(Html.X().GridPanel()
            .ID("GridPanelRequest")
            .Store(Html.X().Store()
                .Model(Html.X().Model()
                    .Fields(
                        new ModelField("ID", ModelFieldType.Int),
                        new ModelField("RequestName"),
                        new ModelField("Comment"),
                        new ModelField("Start", ModelFieldType.Date),
                        new ModelField("End", ModelFieldType.Date),
                        new ModelField("IsDone", ModelFieldType.Boolean),
                        new ModelField()
                        {
                            Name = "Brigade",
                            Type = ModelFieldType.Object
                        }
                    )
                )
                .AutoSync(true)
                .ShowWarningOnFailure(true)
                .Listeners(l =>
                {
                    l.Exception.Fn = "onStoreException";
                    l.Exception.Buffer = 10;
                })
                .SyncUrl(Url.Action("RequestHandleChanges"))
                .DataSource(Model)
            )
            .Icon(Icon.Table)
            .Frame(true)
            .Title("Заявки")
            .Height(430)
            .Width(700)
            .StyleSpec("margin-top: 10px;")
            .ColumnModel(
                Html.X().Column()
                    .Text("Номер")
                    .DataIndex("Id"),

                Html.X().Column()
                    .Text("Название")
                    .DataIndex("RequestName")
                    .Editor(
                        Html.X().TextField().AllowBlank(false)
                    ),

                Html.X().Column()
                    .Text("Комментарий")
                    .DataIndex("Comment")
                    .Editor(
                        Html.X().TextField().AllowBlank(false)
                    ),

                Html.X().DateColumn()
                    .Text("Начало")
                    .DataIndex("Start")
                    .Editor(
                        Html.X().DateField().AllowBlank(false)
                    ),

                Html.X().DateColumn()
                    .Text("Конец")
                    .DataIndex("End")
                    .Editor(
                        Html.X().DateField().AllowBlank(false)
                    ),

                Html.X().BooleanColumn()
                    .Text("Завершено")
                    .DataIndex("IsDone")
                    .Editor(
                        Html.X().TextField().AllowBlank(false)
                    ),

                Html.X().Column()
                    .Text("Бригада")
                    .DataIndex("Brigade")
                    .Width(240)
                    .Renderer("brigadeRenderer")
                    .Editor(
                        Html.X().ComboBox()
                        .QueryMode(DataLoadMode.Remote)
                        .TriggerAction(TriggerAction.All)
                        .StoreID("BrigadeStore")
                        .ValueField("brigade")
                        .DisplayField("BrigadeName")
                    )
            )
            .Plugins(
                Html.X().CellEditing()
            )
)
