@model IEnumerable<GeoSystem.Models.Brigade>


@section headtag
{
    <script>
        var updateRecord = function (form) {
            if (form.getForm()._record == null) {
                return;
            }

            if (!form.getForm().isValid()) {
                Ext.net.Notification.show({
                    iconCls: "icon-exclamation",
                    html: "Form is invalid",
                    title: "Error"
                });
                return false;
            }

            form.getForm().updateRecord();
        };

        var addRecord = function (form, grid) {
            if (!form.getForm().isValid()) {
                Ext.net.Notification.show({
                    iconCls: "icon-exclamation",
                    html: "Form is invalid",
                    title: "Error"
                });

                return false;
            }

            grid.store.insert(0, new Person(form.getForm().getValues()));
            form.getForm().reset();
        };

        var onStoreException = function (proxy, response, operation) {
            var error = operation.getError(),
                        message = Ext.isString(error) ? error : ('(' + error.status + ')' + error.statusText);

            Ext.net.Notification.show({
                iconCls: 'icon-exclamation',
                html: message + "\n<br /><b>Proxy type:</b> " + proxy.type,
                title: 'EXCEPTION',
                scrollable: 'both',
                hideDelay: 5000,
                width: 300,
                height: 200
            });
        };
    </script>
}

@(Html.X().GridPanel()
            .ID("GridPanelBrigade")
            .Store(
                Html.X().StoreForModel().ID("StoreBrigade")
                    .AutoSync(true)
                    .ShowWarningOnFailure(false)                    
                    .SyncUrl(Url.Action("BrigadeHandleChanges"))
                )
            .Icon(Icon.Table)
            .Frame(true)
            .Title("Бригады")
            .Height(430)
            .Width(500)
            .StyleSpec("margin-top: 10px;")
            .ColumnModel(
                Html.X().ColumnFor(Model, m => m.BrigadeID)
                    .ToBuilder<Column.Builder>()
                    .Width(40)
                    .Renderer("return record.phantom ? '' : value;"),

                Html.X().ColumnFor(Model, m => m.BrigadeName)
                    .ToBuilder<Column.Builder>()
                    .Flex(1)
                    .Editor(
                        Html.X().TextField().AllowBlank(false)
                    )
            )
            .Plugins(
                Html.X().CellEditing()
            )
)
